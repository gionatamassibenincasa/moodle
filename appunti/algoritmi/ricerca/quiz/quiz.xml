<?xml version="1.0" encoding="UTF-8"?>
<quiz>

  <!-- Formato Moodle XML - quiz sugli algoritmi di ricerca -->
 
  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Ricerca lineare/Cloze quaderno-rubrica</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Topolino</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Topolino possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Topolino pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Topolino per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Topolino riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Topolino riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Minni</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Minni possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Minni pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Minni per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Minni riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Minni riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Pippo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Pippo possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Pippo pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Pippo per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Pippo riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Pippo riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Pluto</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Pluto possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Pluto pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Pluto per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Pluto riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Pluto riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Clarabella</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Clarabella possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Clarabella pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Clarabella per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Clarabella riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Clarabella riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Orazio Cavezza</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Orazio Cavezza possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Orazio Cavezza pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Orazio Cavezza per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Orazio Cavezza riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Orazio Cavezza riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Pietro Gambadilegno</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Pietro Gambadilegno possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Pietro Gambadilegno pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Pietro Gambadilegno per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Pietro Gambadilegno riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Pietro Gambadilegno riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Commissario Basettoni</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Commissario Basettoni possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Commissario Basettoni pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Commissario Basettoni per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Commissario Basettoni riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Commissario Basettoni riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Ispettore Manetta</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Ispettore Manetta possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Ispettore Manetta pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Ispettore Manetta per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Ispettore Manetta riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Ispettore Manetta riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - Eta Beta</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Eta Beta possiede un quaderno di \( n \) pagine che usa come rubrica telefonica. Le pagine contengono il nome e il
numero di un amico e sono tutte piene. Tra i nomi scritti su due pagine consecutive, comunque prese, non sussiste nessun
criterio di ordinamento. Non sono note funzioni che mappano un nome in un indice.</p>

<p>Le azioni che Eta Beta pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla prima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>voltare pagina dalla precedente alla successiva</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>determinare che sta analizzando l'ultima pagina</td>
            <td>\( 0 \) s</td>
        </tr>
    </tbody>
</table>

<p>
    <strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Eta Beta per cercare il numero di un amico nel sua quaderno nel modo pi&ugrave; efficiente possibile pu&ograve;
        usare l'algoritmo di ricerca {1:MULTICHOICE:=lineare~binaria~indicizzata}.</li>
    <li>Nel caso pi&ugrave; fortunato, Eta Beta riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>
    <li>Il tempo medio per trovare il numero di un amico presente nel quaderno &egrave; di {1:MULTICHOICE:=(n+1)/2~n~1} s.
        <em>Aiuto: coincide con il valor medio tra il caso migliore e quello peggiore.</em>
    </li>
    <li>Nel caso meno fortunato, Eta Beta riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Il tempo necessario per trovare il numero dell'amico il cui numero &egrave; scritto nella decima pagina &egrave; di {1:NUMERICAL:=10:0}
        s.
    </li>
</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Ricerca binaria/Cloze quaderno-rubrica</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Topolino</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Topolino possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Topolino pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Topolino, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Topolino, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Topolino, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Topolino. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Minni</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Minni possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Minni pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Minni, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Minni, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Minni, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Minni. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Pippo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Pippo possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Pippo pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Pippo, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Pippo, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Pippo, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Pippo. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Pluto</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Pluto possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Pluto pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Pluto, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Pluto, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Pluto, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Pluto. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Clarabella</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Clarabella possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Clarabella pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Clarabella, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Clarabella, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Clarabella, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Clarabella. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Orazio Cavezza</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Orazio Cavezza possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Orazio Cavezza pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Orazio Cavezza, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Orazio Cavezza, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Orazio Cavezza, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Orazio Cavezza. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Pietro Gambadilegno</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Pietro Gambadilegno possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Pietro Gambadilegno pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Pietro Gambadilegno, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Pietro Gambadilegno, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Pietro Gambadilegno, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Pietro Gambadilegno. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Commissario Basettoni</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Commissario Basettoni possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Commissario Basettoni pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Commissario Basettoni, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Commissario Basettoni, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Commissario Basettoni, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Commissario Basettoni. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Ispettore Manetta</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Ispettore Manetta possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Ispettore Manetta pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Ispettore Manetta, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Ispettore Manetta, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Ispettore Manetta, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Ispettore Manetta. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - cloze quaderno-rubrica - Eta Beta</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Eta Beta possiede quaderno di \( p \) pagine che usa come rubrica telefonica. Il numero \( p \) soddisfa la relazione
\( 2^{n - 1} < p leq 2^{n} \).
Le pagina contengono il nome e il numero di un amico oppure sono lasciate in bianco. Dati una coppia di nomi nel quaderno, quello che
viene prima nell'ordinamento alfabetico &egrave; in una pagina precente quella dove &egrave; l'altro.</p>
      
<p>Le azioni che Eta Beta pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
tabella:</p>
      
<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire la rubrica alla pagina a met&agrave; di un qualsiasi gruppo di pagine consecutive</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare
                <em>Nota: confrontare significa determinare se il nome da ricercare &egrave; scritto nelle pagine precedenti, in quella
                    pagina o nelle pagine successive;</em>
            </td>
            <td>\( 1 \) s</td>
        </tr>
        <tr>
            <td>determinare che un gruppo di pagine &egrave; composto di una sola pagina</td>
            <td>\( 0 \) s</td>
        </tr>
        <li>determinare che in un tempo trascurabile (0 s);</li>
    </tbody>
</table>
      
      
<p><strong>Completare le seguenti affermazioni</strong>.</p>
      
<ul>
    <li>Eta Beta, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
        {1:MULTICHOICE:~lineare~=binaria~indicizzata}.
    </li>
    <li>Eta Beta, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
        s.
    </li>

    <li>Eta Beta, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n}
        s.
    </li>
    <li>Eta Beta. in media, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=n} s.</li>
    <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=n} s.</li>

</ul>
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Ricerca indicizzata/Hash perfetto/Cloze quaderno-rubrica</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Topolino</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Topolino possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Topolino pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Topolino non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Topolino pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Topolino, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Topolino, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Topolino, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Topolino determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Minni</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Minni possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Minni pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Minni non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Minni pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Minni, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Minni, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Minni, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Minni determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Pippo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Pippo possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Pippo pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Pippo non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Pippo pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Pippo, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Pippo, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Pippo, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Pippo determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Pluto</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Pluto possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Pluto pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Pluto non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Pluto pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Pluto, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Pluto, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Pluto, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Pluto determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Clarabella</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Clarabella possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Clarabella pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Clarabella non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Clarabella pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Clarabella, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Clarabella, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Clarabella, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Clarabella determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Orazio Cavezza</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Orazio Cavezza possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Orazio Cavezza pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Orazio Cavezza non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Orazio Cavezza pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Orazio Cavezza, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Orazio Cavezza, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Orazio Cavezza, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Orazio Cavezza determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Pietro Gambadilegno</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Pietro Gambadilegno possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Pietro Gambadilegno pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Pietro Gambadilegno non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Pietro Gambadilegno pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Pietro Gambadilegno, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Pietro Gambadilegno, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Pietro Gambadilegno, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Pietro Gambadilegno determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Commissario Basettoni</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Commissario Basettoni possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Commissario Basettoni pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Commissario Basettoni non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Commissario Basettoni pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Commissario Basettoni, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Commissario Basettoni, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Commissario Basettoni, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Commissario Basettoni determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Ispettore Manetta</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Ispettore Manetta possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Ispettore Manetta pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Ispettore Manetta non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Ispettore Manetta pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Ispettore Manetta, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Ispettore Manetta, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Ispettore Manetta, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Ispettore Manetta determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca hashing perfetto - Eta Beta</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Eta Beta possiede un quaderno di \( n \) pagine che usa come rubrica telefonica.
Le pagine contengono il nome e il numero di un amico oppure sono lasciate in bianco.
Eta Beta pu&ograve; aprire il quaderno in corrispondenza di alcune pagine usando una linguetta
con le prime due lettere del nome del contatto da ricercare.
&Egrave; noto che Eta Beta non ha due o pi&ugrave; amici le cui prime due lettere del nome siano uguali.</p>

<p>Le azioni che Eta Beta pu&ograve; realizzare e i tempi che impiega per portale a termine sono indicati nella seguente
    tabella:
</p>

<table>
    <caption>Operazioni e tempi</caption>
    <thead>
        <tr>
            <th>Operazione</th>
            <th>Tempo</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>aprire il quaderno alla pagina corrispondente alle prime due lettere di un nome</td>
            <td>\( 0 \) s</td>
        </tr>
        <tr>
            <td>leggere e confrontare il nome scritto nella pagina con quello da ricercare ovvero determinare che la pagina corrente &egrave; bianca</td>
            <td>\( 1 \) s</td>
        </tr>
    </tbody>
</table>

<p><strong>Completare le seguenti affermazioni</strong>.</p>

<ul>
    <li>Eta Beta, per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico, usa l'algoritmo di ricerca
    {1:MULTICHOICE:binaria~=indicizzata~lineare}.
    </li>
    <li>Eta Beta, nel caso pi&ugrave; fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
    s.
    </li>
    <li>Eta Beta, nel caso meno fortunato, riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=1}
    s.
    </li>
    <li>Eta Beta determina che il nome di un amico non &egrave; registrato nel quaderno in {1:SHORTANSWER:=1} s.
    </li>
</ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Ricerca indicizzata/Hash con collisioni/Cloze quaderno-rubrica</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Topolino</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Topolino possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Topolino perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Topolino sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Topolino usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Topolino riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Topolino riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Minni</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Minni possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Minni perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Minni sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Minni usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Minni riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Minni riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Pippo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Pippo possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Pippo perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Pippo sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Pippo usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Pippo riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Pippo riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Pluto</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Pluto possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Pluto perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Pluto sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Pluto usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Pluto riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Pluto riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Clarabella</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Clarabella possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Clarabella perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Clarabella sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Clarabella usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Clarabella riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Clarabella riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Orazio Cavezza</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Orazio Cavezza possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Orazio Cavezza perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Orazio Cavezza sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Orazio Cavezza usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Orazio Cavezza riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Orazio Cavezza riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Pietro Gambadilegno</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Pietro Gambadilegno possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Pietro Gambadilegno perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Pietro Gambadilegno sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Pietro Gambadilegno usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Pietro Gambadilegno riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Pietro Gambadilegno riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Commissario Basettoni</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Commissario Basettoni possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Commissario Basettoni perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Commissario Basettoni sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Commissario Basettoni usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Commissario Basettoni riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Commissario Basettoni riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Ispettore Manetta</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Ispettore Manetta possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Ispettore Manetta perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Ispettore Manetta sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Ispettore Manetta usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Ispettore Manetta riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Ispettore Manetta riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata con collisioni - cloze quaderno-rubrica - Eta Beta</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Eta Beta possiede un quaderno che usa come rubrica telefonica. Le pagine contengono il nome e il numero di un amico
      oppure sono lasciate in bianco. La prima pagina ha una linguetta che permette di aprire la rubrica sul primo nome che
      inizia con la lettera
      <em>A</em>. La pagina
      <strong>
          <em>m</em>
      </strong> ha la linguetta che permette di accedere al primo nome che inizia con la lettera
      <em>B</em> e così via. Il fatto che ci siano solo
      <em>m</em> pagine per ogni lettera non preoccupa Eta Beta perché lui non ha pi&ugrave; di
      <em>m</em> amici il cui nome inizia con la stessa lettera.</p>
  
  <p>Eta Beta sa realizzare le seguenti operazioni:</p>
  <ul>
      <li>aprire la rubrica alla pagina corrispondente alla lettera iniziale di un nome in un tempo trascurabile (0 s);</li>
      <li>confrontare il nome da ricercare con quello scritto nella pagina della rubrica in un secondo (1 s);</li>
      <li>voltare pagina dalla precedente alla successiva in un tempo trascurabile (0 s);</li>
      <li>determinare che sta analizzando l'ultima pagina corrispondente ad una lettera in un tempo trascurabile (0 s);</li>
      <li>determinare che la pagina corrente &egrave; bianca in un tempo trascurabile (0 s).</li>
  </ul>
  
  <p><strong>Completare le seguenti affermazioni</strong>.</p>
  
  <ul>
      <li>Per ricercare nel modo pi&ugrave; efficiente possibile il numero di un amico Eta Beta usa l'algoritmo di ricerca
          {1:MULTICHOICE:lineare~binaria~=indicizzata}.
      </li>
      <li>Nel caso pi&ugrave; fortunato, Eta Beta riesce a trovare il numero di un amico presente nel quaderno in {1:NUMERICAL:=1:0}
          s.
      </li>
      <li>Nel caso meno fortunato, Eta Beta riesce a trovare il numero di un amico presente nel quaderno in {1:SHORTANSWER:=m}
          s.
      </li>
      <li>Il tempo necessario per determinare che il nome di un amico non &egrave; presente nel quaderno &egrave; di {1:SHORTANSWER:=m}
          s.
      </li>
  </ul>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Ricerca lineare/Decodifica dello pseudo-codice</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - iterativo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Quale algoritmo può essere descritto nel modo seguente?</p>
<pre>
algoritmo (A, n, v):
    sia i := 1
    finché i <= n:
        se A[i] = v:
            restituisci i
        altrimenti:
            i := i + 1
    
    restituisci NON_PRESENTE</pre>

<p>Scegli un'alternativa</p>
{1:MULTICHOICE_V:=Ricerca lineare~Ricerca binaria~Ricerca indicizzata~Riconoscimento dell'ordinamento}
]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca lineare - ricorsivo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Quale algoritmo può essere descritto nel modo seguente?</p>
  <pre>
algoritmo (A, n, v):
  restituisci algoritmo_ausiliare (A, n, v, 1)

algoritmo_ausiliare (A, n, v, indice):
  se indice > n:
      restituisci NON_PRESENTE
  altrimenti se A[indice] = v:
      restituisci indice
  altrimenti:
      restituisci algoritmo_ausiliare (A, n, v, indice + 1)</pre>
  
  <p>Scegli un'alternativa</p>
  {1:MULTICHOICE_V:=Ricerca lineare~Ricerca binaria~Ricerca indicizzata~Riconoscimento dell'ordinamento}
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Ricerca binaria/Decodifica dello pseudo-codice</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - iterativo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Quale algoritmo può essere descritto nel modo seguente?</p>
  <pre>
algoritmo (A, n, v):
    sia sinistra := 0
    sia destra := n
    finché (sinistra <= destra):
        sia centro := (sinistra + destra) / 2
        se (A[centro] > v):
            destra = centro - 1
        altrimenti se (A[centro] < v):
            sinistra = centro + 1
        altrimenti:
            restituisci centro

    restituisci NON_PRESENTE</pre>
  
  <p>Scegli un'alternativa</p>
  {1:MULTICHOICE_V:Ricerca lineare~=Ricerca binaria~Ricerca indicizzata~Riconoscimento dell'ordinamento}
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca binaria - ricorsivo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
    <p>Quale algoritmo può essere descritto nel modo seguente?</p>
    <pre>
algoritmo (A, n, v):
    algoritmo_ausiliario (A, v, 1, n)

    algoritmo_ausiliario (A, v, sinistra, destra):
    se (sinistra <= destra):
        sia centro := (sinistra + destra) / 2
        se (A[centro] > v):
            restituisci algoritmo_ausiliario(A, v, sinistra, centro - 1)
        altrimenti se (A[centro] < v):
            restituisci algoritmo_ausiliario(A, v, centro + 1, destra)
        altrimenti:
            restituisci centro
    altrimenti:
        restituisci NON_PRESENTE  
    </pre>
    
    <p>Scegli un'alternativa</p>
    {1:MULTICHOICE_V:Ricerca lineare~=Ricerca binaria~Ricerca indicizzata~Riconoscimento dell'ordinamento}
    ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Ricerca indicizzata/Decodifica dello pseudo-codice</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Algoritmo di ricerca indicizzata</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Quale algoritmo può essere descritto nel modo seguente?</p>
  <pre>
algoritmo (A, n, v, h):
    sia i := h(v)
    se A[i] = v:
        restituisci A[i]
    altrimenti:
        restituisci NON_PRESENTE</pre>
  
  <p>Scegli un'alternativa</p>
  {1:MULTICHOICE_V:Ricerca lineare~Ricerca binaria~=Ricerca indicizzata~Riconoscimento dell'ordinamento}
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Riconoscimento di una sequenza ordinata/Decodifica dello pseudo-codice</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Riconoscimento di una sequenza ordinata - iterativo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
  <p>Quale algoritmo può essere descritto nel modo seguente?</p>
  <pre>
algoritmo (A, n):
    sia i := 1
    finché i < n:
        se A[i] > A[i + 1]:
            restituisci Falso
        altrimenti:
            i := i + 1
    
    restituisci Vero</pre>
  
  <p>Scegli un'alternativa</p>
  {1:MULTICHOICE_V:Ricerca lineare~Ricerca binaria~Ricerca indicizzata~=Riconoscimento dell'ordinamento}
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>

  <question type="cloze">
    <name>
      <text>Riconoscimento di una sequenza ordinata - ricorsivo</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
    <p>Quale algoritmo può essere descritto nel modo seguente?</p>
    <pre>
algoritmo (A, n):
    se n < 2:
        restituisci Vero
    altrimenti:
        restituisci algoritmo_ausiliario(A, n, 1)

algoritmo_ausiliario (A, n , coppia)
    se coppia >= n:
        restituisci Vero
    altrimenti se A[coppia] > A[coppia + 1]:
        restituisci Falso
    altrimenti:
      restituisci algoritmo_ausiliario (A, n, coppia + 1)</pre>
    
    <p>Scegli un'alternativa</p>
    {1:MULTICHOICE_V:Ricerca lineare~Ricerca binaria~Ricerca indicizzata~=Riconoscimento dell'ordinamento}
    ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Ricerca binaria/Altri esempi</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Comprendere ed applicare l&#x27;algoritmo di ricerca binaria</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>
          Un ladro cerca di aprire una cassaforte che ha un milione di possibili
          combinazioni numeriche. La sua particolare tecnica gli consente di stabilire
          se la combinazione che sta provando precede o segue, nell'ordine numerico,
          quella corretta. Per aprire la cassaforte avr&agrave; al pi&ugrave; bisogno di
          provare al pi&ugrave; quante combinazioni? </span>
</p>;
          
  <p>Scegli un'alternativa</p>
  {1:MULTICHOICE_V:=20~100~500000~1000000}

  <p>Da un testo di Mauro Torelli</p>
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Riconoscimento di una sequenza ordinata/Definizione</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Definizione ricorsiva di ordinamento di una sequenza</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Quale delle seguenti definizioni descrive una procedura effettiva di calcolo per determinare se la sequenza numerica 
   \( S \) &egrave; ordinata?</p>

  <p>Scegli un'alternativa</p>

  {1:MULTICHOICE_V:=\(\mathrm{ordinato?\}(S) = \begin{cases\}    \mathrm{vero\} & \text{se \}\mathrm{lunghezza\}(S)\leq 1\\    \mathrm{falso\} & \text{se \}\mathrm{primo\}(S) \succ \mathrm{secondo\}(S)\\    \mathrm{ordinato?\}(\mathrm{resto\}(S)) & \text{altrimenti\}\end{cases\}\)~\(\mathrm{ordinato?\}(S) = \begin{cases\}    \mathrm{vero\} & \text{se \}\mathrm{lunghezza\}(S)\leq 1\\    \mathrm{falso\} & \text{se \}\mathrm{primo\}(S) > \mathrm{secondo\}(S)\\    \mathrm{ordinato?\}(S) &\text{altrimenti\}\end{cases\}\)~\(\mathrm{ordinato?\}(S) = \begin{cases\}    \mathrm{vero\} & \text{se \}\mathrm{lunghezza\}(S)\leq 1\\    \mathrm{falso\}& \text{se \}\mathrm{primo\}(S)\preccurlyeq\mathrm{secondo\}(S)\\    \mathrm{ordinato?\}(\mathrm{resto\}(S)) & \text{altrimenti\}\end{cases\}\)~\(\mathrm{ordinato?\}(S) = \begin{cases\}    \mathrm{falso\} & \text{se \}\mathrm{lunghezza\}(S)\leq 1\\    \mathrm{falso\} & \text{se \}\mathrm{primo\}(S)\succ\mathrm{secondo\}(S)\\    \mathrm{ordinato?\}(\mathrm{resto\}(S)) & \text{altrimenti\}\end{cases\}\)}

  <p>Nota: \( \mathrm{resto\}(S) \) produce una sequenza \(S^\prime\) che include gli elementi di \(S\) dal secondo all'ultimo, nello stesso ordine.
     \(a \preccurlyeq b\) indica che \(a\) non segue \(b\) nell'ordinamento considerato mentre \(a \succ b\) indica che \(a\)  segue \(b\).
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Riconoscimento di una sequenza ordinata/Definizione</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Definizione iterativa di ordinamento di una sequenza</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Quale delle seguenti definizioni descrive una procedura effettiva di calcolo per determinare se la sequenza numerica 
   \( S = [s_1, s_2,\ldots, s_n]\) &egrave; ordinata?</p>

  <p>Scegli un'alternativa</p>

  {1:MULTICHOICE_V:=\(s_i \preccurlyeq s_{i+1\} \text{ per \} i = 1, 2, \ldots, n - 1\)~\(s_i \preccurlyeq s_{i+1\} \text{ per \} i = 1, 2, \ldots, n\)~\(s_i \succ s_{i+1\} \text{ per \} i = 1, 2, \ldots, n - 1\)~\(s_i \succ s_{i+1\} \text{ per \} i = 1, 2, \ldots, n\)}

  <p>Nota: \(a \preccurlyeq b\) indica che \(a\) non segue \(b\) nell'ordinamento considerato mentre \(a \succ b\) indica che \(a\)  segue \(b\).
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Elementi di matematica per il calcolo della complessità computazionale</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Formula di Gauss bambino</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>La somma di tutti gli interi compresi tra \(1\) e \(n\) vale?</p>

  <p>Scegli un'alternativa</p>

  {1:MULTICHOICE_V:=\(\frac{(1+n)\cdot n\}{2\}\)~\(\frac{(1+n)\cdot n\}{2\cdot n\}\)~\(\frac{(1+n)\}{2\}\)~\(\frac{n^2\}{2\}\)}
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>


  <question type="category">
    <category>
        <text>$course$/Algoritmi/Algoritmi di ricerca/Ricerca indicizzata</text>

    </category>
  </question>

  <question type="cloze">
    <name>
      <text>Valutare le prestazioni</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>Le tecniche di ricerca <em>indicizzate</em> che prevedono <em>collisioni</em> hanno prestazioni</p>

  <p>Scegli un'alternativa</p>

  {1:MULTICHOICE_V:=che dipendono dal rapporto tra numero delle posizioni occupate e numero delle posizioni disponibili~che dipendono dal rapporto tra numero di scambi e numero di confronti~costanti, ossia indipendenti dai dati~peggiori di quelle dell'algoritmo di ricerca lineare}
  ]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
  </question>



</quiz>
